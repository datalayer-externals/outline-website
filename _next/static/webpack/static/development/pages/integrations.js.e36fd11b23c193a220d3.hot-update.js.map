{"version":3,"file":"static/webpack/static/development/pages/integrations.js.e36fd11b23c193a220d3.hot-update.js","sources":["webpack:///./components/Card.tsx","webpack:///./pages/integrations.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport { colors } from \"theme\";\n\ntype Props = {\n  href?: string;\n  title: React.ReactNode;\n  description: React.ReactNode;\n};\n\nexport default function Card({ title, description, href }: Props) {\n  const content = (\n    <>\n      <h3>{title}</h3>\n      <p>{description}</p>\n    </>\n  );\n\n  return (\n    <>\n      {href ? (\n        <Link href={href}>\n          <a className=\"card\">{content}</a>\n        </Link>\n      ) : (\n        <div className=\"card\">{content}</div>\n      )}\n      <style jsx>{`\n        .card {\n          display: block;\n          margin: 1rem;\n          flex-basis: 45%;\n          padding: 1.5rem;\n          text-align: left;\n          color: inherit;\n          text-decoration: none;\n          border: 1px solid #eaeaea;\n          border-radius: 8px;\n          transition: color 0.15s ease, border-color 0.15s ease;\n          min-height: 250px;\n        }\n\n        a.card:hover,\n        a.card:focus,\n        a.card:active {\n          color: ${colors.primary};\n          border-color: ${colors.primary};\n          outline: none;\n        }\n\n        .card :global(h3) {\n          margin: 0 0 1rem 0;\n          font-size: 1.5rem;\n        }\n\n        .card :global(p) {\n          margin: 0;\n          font-size: 1.25rem;\n          line-height: 1.5;\n        }\n      `}</style>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { filter, find } from \"lodash\";\nimport Card from \"components/Card\";\nimport IntegrationsMenu from \"components/IntegrationsMenu\";\nimport Layout from \"components/Layout\";\nimport content from \"data/integrations.json\";\nimport { colors, spacing } from \"theme\";\n\nexport default function Integrations() {\n  const [query, setQuery] = React.useState(\"\");\n\n  const normalizedQuery = query.toLowerCase().trim();\n  const results = filter(\n    content,\n    (integration) =>\n      integration.slug.toLowerCase().includes(normalizedQuery) ||\n      integration.description.toLowerCase().includes(normalizedQuery)\n  );\n\n  return (\n    <Layout\n      title=\"Integrations\"\n      background=\"#F4F7FA\"\n      hero=\"Outline is extensible and designed to integrate with your existing\n      workflow and tools. If you can’t find the integration you’re\n      after, reach out – we are adding new applications all the time.\"\n      sidebar={<IntegrationsMenu />}\n    >\n      <input\n        type=\"search\"\n        value={query}\n        placeholder=\"Search…\"\n        onChange={(ev) => setQuery(ev.currentTarget.value)}\n        className=\"search\"\n      />\n\n      {query ? (\n        <>\n          <h2>Results</h2>\n          <div className=\"pure-g cards\">\n            {query &&\n              results.map((integration) => (\n                <div className=\"pure-u-1 pure-u-md-1-2\" key={integration.slug}>\n                  <Card\n                    title={\n                      <>\n                        <img\n                          className=\"integration-icon\"\n                          src={`/images/integrations/${integration.slug}.png`}\n                        />\n                        <div>{integration.name}</div>\n                      </>\n                    }\n                    description={integration.description}\n                    href={`/integrations/${integration.slug}`}\n                  />\n                </div>\n              ))}\n            {results.length === 0 && (\n              <div className=\"pure-u-1 pure-u-md-1-2\">\n                <Card\n                  title=\"Not found it?\"\n                  href=\"mailto:hello@getoutline.com?subject=Integration%20Idea\"\n                  description={\n                    <>\n                      <p>\n                        Let us know which integration we are missing that you\n                        would like to see…{\" \"}\n                      </p>\n                      <br />\n                      <p>Email hello@getoutline.com with your suggestions</p>\n                    </>\n                  }\n                />\n              </div>\n            )}\n          </div>\n        </>\n      ) : (\n        <>\n          <h2>Featured</h2>\n          <div className=\"pure-g cards\">\n            {[\"slack\", \"google-docs\", \"alfred\", \"figma\"].map((slug) => {\n              const integration = find(content, { slug });\n\n              return (\n                <div className=\"pure-u-1 pure-u-md-1-2\" key={slug}>\n                  <Card\n                    title={\n                      <>\n                        <img\n                          className=\"integration-icon\"\n                          src={`/images/integrations/${integration.slug}.png`}\n                        />\n                        <div>{integration.name}</div>\n                      </>\n                    }\n                    description={\n                      <>{integration.summary || integration.description}.</>\n                    }\n                    href={`/integrations/${integration.slug}`}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </>\n      )}\n\n      <style jsx>\n        {`\n          .search {\n            width: 100%;\n            height: 32px;\n            border-radius: 4px;\n            border: 0;\n            padding: 24px ${spacing.medium};\n            background: ${colors.lightGrey};\n            font-size: 16px;\n            margin: 16px 0;\n          }\n\n          .search:active,\n          .search:focus {\n            outline: none;\n            box-shadow: 0 0 0 2px ${colors.primary};\n          }\n\n          .cards {\n            margin: 0 -1rem;\n          }\n\n          .integration-icon {\n            width: 60px;\n            height: 60px;\n            margin-bottom: 1em;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AA4CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAKA;AAEA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AApFA;AAAA;AAAA;AAAA;AAyHA;;;;A","sourceRoot":""}